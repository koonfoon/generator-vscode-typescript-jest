notifications:
  email: false

dist: focal

language: node_js

services:
  - docker

node_js:
  - "14"

git:
  depth: false

before_install:
  # - pwd
  # - ls -la
  # - docker pull gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1
  # - docker image ls
  # - export GitVersion_FullSemVer=$(docker run --rm -v "$(pwd):/repo" gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1 /repo -output json -showvariable FullSemVer)
  # - echo $GitVersion_FullSemVer
  # - export GitVersion_Output=$(docker run --rm -v "$(pwd):/repo" gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1 /repo)
  # - echo $GitVersion_Output
  # - docker run --rm -v $(pwd):/repo gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1 /repo -output json -showvariable FullSemVer

install:
  - npm ci

script:
  # - npm run test
  - git branch
  - git branch --show-current
  - echo $TRAVIS_BRANCH
  - export Git_Branch=$(echo $TRAVIS_BRANCH)
  - echo $Git_Branch
  - pwd
  - ls -la
  - docker pull gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1
  - docker image ls
  - export GitVersion_FullSemVer=$(docker run --rm -v "$(pwd):/repo" gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1 /repo -output json -showvariable FullSemVer)
  - echo $GitVersion_FullSemVer
  - export GitVersion_Output=$(docker run --rm -v "$(pwd):/repo" gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1 /repo)
  - echo $GitVersion_Output

after_success:
  # - ls -la GitVersion.yml
  - echo -e "Test Success"
  # - docker pull gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1
  # - docker run --rm -v "$(pwd):/repo" gittools/gitversion:5.3.5-linux-alpine.3.10-x64-netcoreapp3.1 /repo
